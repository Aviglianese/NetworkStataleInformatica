[{"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\reportWebVitals.ts":"1","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\ExtraGroupView.tsx":"2","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Home.tsx":"3","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\App.tsx":"4","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\CourseItemView.tsx":"5","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\CourseListView.tsx":"6","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Courses.tsx":"7","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\index.tsx":"8","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\HeaderMenu.tsx":"9","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Content.tsx":"10","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\HeaderTitle.tsx":"11","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Footer.tsx":"12","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\FaqProposer.tsx":"13","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Administrators.tsx":"14","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\AdditionalGroupsView.tsx":"15"},{"size":440,"mtime":1606822313938,"results":"16","hashOfConfig":"17"},{"size":2736,"mtime":1608674788798,"results":"18","hashOfConfig":"17"},{"size":4729,"mtime":1608676724609,"results":"19","hashOfConfig":"17"},{"size":1314,"mtime":1609099194076,"results":"20","hashOfConfig":"17"},{"size":6728,"mtime":1609104648124,"results":"21","hashOfConfig":"17"},{"size":7149,"mtime":1609104473564,"results":"22","hashOfConfig":"17"},{"size":4663,"mtime":1609101227912,"results":"23","hashOfConfig":"17"},{"size":640,"mtime":1606822313936,"results":"24","hashOfConfig":"17"},{"size":4110,"mtime":1608988974988,"results":"25","hashOfConfig":"17"},{"size":1302,"mtime":1608988907496,"results":"26","hashOfConfig":"17"},{"size":1038,"mtime":1608931568566,"results":"27","hashOfConfig":"17"},{"size":5431,"mtime":1608806110984,"results":"28","hashOfConfig":"17"},{"size":7080,"mtime":1608833768866,"results":"29","hashOfConfig":"17"},{"size":5661,"mtime":1608983972111,"results":"30","hashOfConfig":"17"},{"size":2932,"mtime":1608583454780,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"14dtpaq",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\reportWebVitals.ts",[],["65","66"],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\ExtraGroupView.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Home.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\App.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\CourseItemView.tsx",["67","68"],"import * as React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { Link, Text } from 'office-ui-fabric-react';\r\nimport {\r\n    Card,\r\n    ICardTokens,\r\n} from \"@uifabric/react-cards\";\r\nimport Course from './models/Course'\r\nimport { initializeIcons } from '@uifabric/icons';\r\nimport { FontWeights, ITextStyles, Persona } from '@fluentui/react';\r\ninitializeIcons();\r\n\r\ninterface Props {\r\n    data: Course\r\n}\r\n\r\n\r\nconst CourseItemView = (props: Props) => {\r\n    var data = props.data;\r\n\r\n    const siteTextStyles: ITextStyles = {\r\n        root: {\r\n            color: \"#025F52\",\r\n            fontWeight: FontWeights.semibold,\r\n        },\r\n    };\r\n    const descriptionTextStyles: ITextStyles = {\r\n        root: {\r\n            color: \"#333333\",\r\n            fontWeight: FontWeights.semibold,\r\n        },\r\n    };\r\n    const helpfulTextStyles: ITextStyles = {\r\n        root: {\r\n            color: \"#333333\",\r\n            fontWeight: FontWeights.regular,\r\n        },\r\n    };\r\n    const cardTokens: ICardTokens = { childrenMargin: 12 };\r\n\r\n    return (\r\n        <Card\r\n            tokens={cardTokens}                             \r\n        >\r\n            <Card.Item>\r\n                { data.anno !== \"Anno accademico\" ? <Persona text={data.name} /> : <Persona text={data.name} imageUrl= {process.env.PUBLIC_URL + '/photo_2019-12-29_19-50-06.jpg'} /> }\r\n            </Card.Item>\r\n            <Card.Section>\r\n                {   // Gruppo anno accademico descrizione in caso c'è il link disponibile (magistrali insomma) \r\n                    ( () => {\r\n                        if (data.anno === \"Anno accademico\" && data.gruppo !== \"\") {\r\n                            return <Text variant=\"small\" styles={helpfulTextStyles}>Gruppo per qualsiasi tipo di discussione inerente a questo corso di laurea.</Text>\r\n                        } else {\r\n                            return \"\";\r\n                        }\r\n                    })()\r\n                }\r\n                \r\n                \r\n                {\r\n                    ( () => {\r\n                        if (data.cfu as any != \"\") {\r\n                            return (\r\n                                <Text variant=\"small\" styles={siteTextStyles}>{data.cfu} CFU</Text>\r\n                            )\r\n                        } else {\r\n                            return \"\";\r\n                        }\r\n                    })()\r\n                }\r\n\r\n                <Text styles={descriptionTextStyles}>\r\n                {\r\n                    (() => \r\n                    {\r\n                        if (data.anno === \"\" || data.anno === \"Anno accademico\")\r\n                        {\r\n                            return \"\";\r\n                        } \r\n                        if (data.anno === \"Complementare\")\r\n                        {\r\n                            return <span>Complementare, </span>;\r\n                        }\r\n                        else \r\n                        {\r\n                            return <span>{data.anno}° Anno, </span>;\r\n                        }\r\n                    })()\r\n                }\r\n                {\r\n                    ( () => {\r\n                        if (data.semestre as any != \"\") {\r\n                            return <span>{data.semestre}° Semestre</span>;\r\n                        } else {\r\n                            return \"\";\r\n                        }\r\n                    })()\r\n                }\r\n                </Text>\r\n\r\n                {\r\n                    ( () => {\r\n                        if (data.gruppo !== \"\") {\r\n                            return (\r\n                            <Text variant=\"small\" styles={helpfulTextStyles}>\r\n                                <i className=\"fab fa-telegram-plane\" style={{color: '#6087eb'}}></i>\r\n                                &nbsp;\r\n                                <Link href={data.gruppo}>\r\n                                    Gruppo Telegram\r\n                                </Link>\r\n                            </Text>\r\n                            )\r\n                        } else if ( data.anno === \"Anno accademico\") {\r\n                            return (\r\n                                <Text variant=\"small\" styles={helpfulTextStyles}>Contatta un amministratore se vuoi essere aggiunto al gruppo.</Text>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <Text variant=\"small\" styles={helpfulTextStyles}>Gruppo non disponibile.</Text>\r\n                            )\r\n                        }\r\n                    })()\r\n                }\r\n                {\r\n                    data.websites.length !== 0 ?\r\n                        <Text variant=\"small\" styles={helpfulTextStyles}>\r\n                            <i className=\"fas fa-link\" style={{color:'#696a6b'}}></i>\r\n                            &nbsp;\r\n                            {data.websites.map(\r\n                                (e, i) => {\r\n                                    return (\r\n                                        <span key={i}>\r\n                                            <Link href={e.link}>\r\n                                                {e.etichetta}\r\n                                            </Link>\r\n                                            {i + 1 < data.websites.length ? <span>,&nbsp;</span> : \"\"}\r\n                                        </span>\r\n                                    )\r\n                                }\r\n                            )}\r\n                        </Text>\r\n                        : \"\"\r\n                }\r\n                {\r\n                    data.faq !== \"\" ?\r\n                        <Text variant=\"small\" styles={helpfulTextStyles}>\r\n                            <i className=\"far fa-question-circle\"></i>\r\n                            &nbsp;\r\n                            <Link href={data.faq}>\r\n                                    Faq\r\n                            </Link>\r\n                        </Text>\r\n                        :\r\n                        \"\"\r\n                }\r\n\r\n            </Card.Section>\r\n            {/*\r\n            <Card.Section\r\n                horizontal\r\n                styles={footerCardSectionStyles}\r\n                tokens={footerCardSectionTokens}\r\n            >\r\n                <Icon iconName=\"RedEye\" styles={iconStyles} />\r\n                <Icon iconName=\"SingleBookmark\" styles={iconStyles} />\r\n                <Stack.Item grow={1}>\r\n                    <span />\r\n                </Stack.Item>\r\n                <Icon iconName=\"MoreVertical\" styles={iconStyles} />\r\n            </Card.Section>*/}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default CourseItemView;","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\CourseListView.tsx",["69"],"import * as React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport CourseItemView from \"./CourseItemView\";\r\nimport Course from \"./models/Course\";\r\nimport CdlCourses from './data/CdlCourses.json'\r\nimport { FocusZone, IRectangle, List } from \"@fluentui/react\";\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Dropdown, DropdownMenuItemType, IDropdownStyles, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { Text } from \"office-ui-fabric-react/lib/Text\";\r\nimport { FontSizes } from '@fluentui/theme';\r\nimport './List.css'\r\n\r\ninterface Props {\r\n    cdl?: string;\r\n}\r\n\r\nconst dropdownStyles: Partial<IDropdownStyles> = {\r\n    //dropdownOptionText: { textAlign: 'center' },\r\n    //dropdown: { width: '150px'},\r\n    dropdownItems: { textAlign: 'center', alignItems: 'center' }\r\n};\r\n\r\nconst classNames = mergeStyleSets({\r\n    listGridExample: {\r\n        overflow: 'hidden',\r\n        fontSize: 0,\r\n        position: 'relative',\r\n        marginBottom: 10,\r\n        margin: '1px'\r\n    },\r\n    listGridExampleTile: {\r\n        textAlign: 'center',\r\n        outline: 'none',\r\n        position: 'relative',\r\n        float: 'left'\r\n    },\r\n});\r\n\r\nconst ROWS_PER_PAGE = 3;\r\nconst MAX_ROW_HEIGHT = 240;\r\n\r\nconst getCourses = (cdl?: string) => (CdlCourses as any)[cdl!] ?? []\r\n\r\nconst semesterFilterOptions: IDropdownOption[] = [\r\n    {\r\n        key:0,\r\n        text:'Non selezionato'\r\n    },\r\n    {\r\n        key: 1,\r\n        text:'Primo'\r\n    },\r\n    {\r\n        key:2,\r\n        text:'Secondo'\r\n    }\r\n];\r\n\r\nconst yearBachelorDegreeFilterOptions: IDropdownOption[] = [\r\n    {\r\n        key: 0,\r\n        text:'Non selezionato'\r\n    },\r\n    {\r\n        key: 1,\r\n        text:'Primo'\r\n    },\r\n    {\r\n        key: 2,\r\n        text:'Secondo'\r\n    },\r\n    {\r\n        key: 3,\r\n        text:'Terzo'\r\n    },\r\n    {\r\n        key: 4,\r\n        text:'Complementare'\r\n    }\r\n];\r\n\r\nconst yearMasterDegreeFilterOptions: IDropdownOption[] = [\r\n    {\r\n        key: 0,\r\n        text:'Non selezionato'\r\n    },\r\n    {\r\n        key: 1,\r\n        text:'Primo'\r\n    },\r\n    {\r\n        key: 2,\r\n        text:'Secondo'\r\n    }\r\n];\r\n\r\nconst CourseListView = (props: Props) => {\r\n    const columnCount = React.useRef(0);\r\n    const rowHeight = React.useRef(0);\r\n    const [nameFilter, setNameFilter] = React.useState<string>(\"\")\r\n    const [yearFilter, setYearFilter] = React.useState<number>(0)\r\n    const [semesterFilter, setSemesterFilter] = React.useState<number>(0)\r\n\r\n    const courses: Course[] = getCourses(props.cdl);\r\n\r\n    const getItemCountForPage = React.useCallback((itemIndex?: number, surfaceRect?: IRectangle) => {\r\n        if (itemIndex === 0) {\r\n            columnCount.current = Math.ceil(surfaceRect!.width / MAX_ROW_HEIGHT);\r\n            rowHeight.current = Math.floor(surfaceRect!.width / columnCount.current);\r\n        }\r\n        return columnCount.current * ROWS_PER_PAGE;\r\n    }, []);\r\n\r\n    const getPageHeight = React.useCallback((): number => {\r\n        return rowHeight.current * ROWS_PER_PAGE;\r\n    }, []);\r\n\r\n    const getCell = (e?: Course, index?: number, isScrolling?: boolean) => {\r\n        return (\r\n            <div\r\n                data-is-focusable\r\n                className={classNames.listGridExampleTile}\r\n                style={{\r\n                    height: MAX_ROW_HEIGHT + 'px',\r\n                    //width: 100 / columnCount.current + '%'\r\n                    width: '213px'\r\n                }}>\r\n                <CourseItemView key={index} data={e!} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const onNameFilterChanged = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, text?: string): void => {\r\n        setNameFilter(text ?? \"\");\r\n    };\r\n\r\n    const onYearFilterChanged = (event: React.FormEvent<HTMLDivElement>, item?: IDropdownOption): void => {\r\n        setYearFilter((item?.key ?? 0) as number);\r\n    };\r\n\r\n    const onSemesterFilterChanged = (event: React.FormEvent<HTMLDivElement>, item?: IDropdownOption): void => {\r\n        setSemesterFilter((item?.key ?? 0) as number);\r\n    };\r\n\r\n    \r\n\r\n    let yearFilterOptions = props.cdl === \"magistrale_informatica\" || props.cdl === 'magistrale_sicurezza_informatica' ? yearMasterDegreeFilterOptions : yearBachelorDegreeFilterOptions\r\n    \r\n    let filteredCourses = courses\r\n\r\n    if (nameFilter !== \"\")\r\n    {\r\n        filteredCourses = filteredCourses.filter(x => x.name?.toLocaleLowerCase()?.includes(nameFilter.toLocaleLowerCase()))\r\n    }\r\n\r\n    if (semesterFilter !== 0)\r\n    {\r\n        filteredCourses = filteredCourses.filter(x => x.semestre === semesterFilter || (x.semestre as any) === semesterFilter + \"\") // leva l'or quando fai i semestri come number. Se non sai il semestre metti 0\r\n    }\r\n\r\n    if (yearFilter !== 0)\r\n    {\r\n        if (yearFilter === 4)\r\n        {\r\n            filteredCourses = filteredCourses.filter(x => x.anno === \"Complementare\")\r\n        }\r\n        else \r\n        {\r\n            filteredCourses = filteredCourses.filter(x => x.anno === yearFilter || (x.anno as any) === yearFilter + \"\") // leva l'or quando fai i semestri come number. Se non sai il semestre metti 0\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <FocusZone className=\"\">\r\n                <div className=\"row mb-4\">\r\n                    <div className=\"col-lg-4\">\r\n                        <TextField\r\n                            label={'Cerca per nome'}\r\n                            onChange={onNameFilterChanged}                \r\n                        />\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                        <Dropdown options={yearFilterOptions}\r\n                            label={`Cerca per anno`}\r\n                            onChange={onYearFilterChanged}\r\n                            selectedKey={yearFilter}\r\n                            styles={dropdownStyles}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                    <Dropdown options={semesterFilterOptions}\r\n                        label={`Cerca per semestre`}\r\n                        onChange={onSemesterFilterChanged}\r\n                        selectedKey={semesterFilter}\r\n                        styles={dropdownStyles}\r\n                    />\r\n                    </div>\r\n                </div>\r\n                    {\r\n                        filteredCourses.length === 0 ? <Text style={{ fontSize: FontSizes.size14 }}>Nessun corso trovato.</Text> :\r\n                        <List\r\n                        className={classNames.listGridExample}\r\n                        items={filteredCourses}\r\n                        getItemCountForPage={getItemCountForPage}\r\n                        getPageHeight={getPageHeight}\r\n                        renderedWindowsAhead={4}\r\n                        onRenderCell={getCell}\r\n                    />\r\n                    }\r\n            </FocusZone>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CourseListView;\r\n","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Courses.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\index.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\HeaderMenu.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Content.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\HeaderTitle.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Footer.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\FaqProposer.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Administrators.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\AdditionalGroupsView.tsx",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":63,"column":45,"nodeType":"76","messageId":"77","endLine":63,"endColumn":47},{"ruleId":"74","severity":1,"message":"75","line":93,"column":50,"nodeType":"76","messageId":"77","endLine":93,"endColumn":52},{"ruleId":"78","severity":1,"message":"79","line":11,"column":20,"nodeType":"80","messageId":"81","endLine":11,"endColumn":40},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'DropdownMenuItemType' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]