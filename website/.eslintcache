[{"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\reportWebVitals.ts":"1","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\ExtraGroupView.tsx":"2","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Home.tsx":"3","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\App.tsx":"4","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\CourseItemView.tsx":"5","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\CourseListView.tsx":"6","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Courses.tsx":"7","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\index.tsx":"8","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\HeaderMenu.tsx":"9","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Content.tsx":"10","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\HeaderTitle.tsx":"11","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Footer.tsx":"12","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\FaqProposer.tsx":"13","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Administrators.tsx":"14","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\AdditionalGroupsView.tsx":"15"},{"size":440,"mtime":1606822313938,"results":"16","hashOfConfig":"17"},{"size":2724,"mtime":1608583350872,"results":"18","hashOfConfig":"17"},{"size":4728,"mtime":1608309878314,"results":"19","hashOfConfig":"17"},{"size":1405,"mtime":1608557574371,"results":"20","hashOfConfig":"17"},{"size":4904,"mtime":1608366583805,"results":"21","hashOfConfig":"17"},{"size":2656,"mtime":1608582017472,"results":"22","hashOfConfig":"17"},{"size":4375,"mtime":1608557531028,"results":"23","hashOfConfig":"17"},{"size":640,"mtime":1606822313936,"results":"24","hashOfConfig":"17"},{"size":4003,"mtime":1608291929083,"results":"25","hashOfConfig":"17"},{"size":1300,"mtime":1608583559053,"results":"26","hashOfConfig":"17"},{"size":972,"mtime":1607458666477,"results":"27","hashOfConfig":"17"},{"size":5389,"mtime":1608362356991,"results":"28","hashOfConfig":"17"},{"size":7966,"mtime":1608404043027,"results":"29","hashOfConfig":"17"},{"size":5154,"mtime":1608362592338,"results":"30","hashOfConfig":"17"},{"size":2932,"mtime":1608583454780,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"14dtpaq",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\reportWebVitals.ts",[],["67","68"],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\ExtraGroupView.tsx",["69","70"],"import * as React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { Link, Text } from 'office-ui-fabric-react';\r\nimport {\r\n    Card,\r\n    ICardTokens,\r\n} from \"@uifabric/react-cards\";\r\nimport ExtraGroup from './models/ExtraGroup'\r\nimport { initializeIcons } from '@uifabric/icons';\r\nimport { FontWeights, Icon, ITextStyles, Persona } from '@fluentui/react';\r\ninitializeIcons();\r\n\r\ninterface Props {\r\n    data: ExtraGroup\r\n}\r\n\r\n\r\nconst ExtraGroupView = (props: Props) => {\r\n    var data = props.data;\r\n\r\n    /*\r\n    const siteTextStyles: ITextStyles = {\r\n        root: {\r\n            color: \"#025F52\",\r\n            fontWeight: FontWeights.semibold,\r\n        },\r\n    };\r\n    */\r\n    const descriptionTextStyles: ITextStyles = {\r\n        root: {\r\n            fontSize: \"12px\",\r\n            color: \"#333333\",\r\n            fontWeight: FontWeights.semibold\r\n        },\r\n    };\r\n    const helpfulTextStyles: ITextStyles = {\r\n        root: {\r\n            color: \"#333333\",\r\n            fontWeight: FontWeights.regular,\r\n        },\r\n    };\r\n    const cardTokens: ICardTokens = { childrenMargin: 12 };\r\n\r\n    return (\r\n        <Card\r\n            aria-label=\"Clickable vertical card with image bleeding at the center of the card\"\r\n            tokens={cardTokens}>\r\n            <Card.Item>\r\n                <Persona text={data.name} />\r\n            </Card.Item>\r\n            <Card.Section>\r\n                <Text variant=\"small\" styles={helpfulTextStyles}>\r\n                    {data.description}\r\n                </Text>\r\n                <Text variant=\"small\" styles={helpfulTextStyles}>\r\n                    <i className=\"fab fa-telegram-plane\" style={{color: '#6087eb'}}></i>\r\n                    &nbsp;\r\n                    <Link href={data.gruppo}>\r\n                        Gruppo Telegram\r\n                    </Link>\r\n                </Text>\r\n                {/*\r\n                <Text variant=\"small\" styles={helpfulTextStyles}>\r\n                    <Icon iconName=\"Link\" />\r\n                    {data.name}\r\n                </Text>\r\n                {data.name}*/}\r\n\r\n            </Card.Section>\r\n\r\n            {/*\r\n            <Card.Section\r\n                horizontal\r\n                styles={footerCardSectionStyles}\r\n                tokens={footerCardSectionTokens}\r\n            >\r\n                <Icon iconName=\"RedEye\" styles={iconStyles} />\r\n                <Icon iconName=\"SingleBookmark\" styles={iconStyles} />\r\n                <Stack.Item grow={1}>\r\n                    <span />\r\n                </Stack.Item>\r\n                <Icon iconName=\"MoreVertical\" styles={iconStyles} />\r\n            </Card.Section>*/}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ExtraGroupView;","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Home.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\App.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\CourseItemView.tsx",["71"],"import * as React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { Link, Text } from 'office-ui-fabric-react';\r\nimport {\r\n    Card,\r\n    ICardTokens,\r\n} from \"@uifabric/react-cards\";\r\nimport Course from './models/Course'\r\nimport { initializeIcons } from '@uifabric/icons';\r\nimport { FontWeights, Icon, ITextStyles, Persona } from '@fluentui/react';\r\ninitializeIcons();\r\n\r\ninterface Props {\r\n    data: Course\r\n}\r\n\r\n\r\nconst CourseItemView = (props: Props) => {\r\n    var data = props.data;\r\n\r\n    const siteTextStyles: ITextStyles = {\r\n        root: {\r\n            color: \"#025F52\",\r\n            fontWeight: FontWeights.semibold,\r\n        },\r\n    };\r\n    const descriptionTextStyles: ITextStyles = {\r\n        root: {\r\n            color: \"#333333\",\r\n            fontWeight: FontWeights.semibold,\r\n        },\r\n    };\r\n    const helpfulTextStyles: ITextStyles = {\r\n        root: {\r\n            color: \"#333333\",\r\n            fontWeight: FontWeights.regular,\r\n        },\r\n    };\r\n    const cardTokens: ICardTokens = { childrenMargin: 12 };\r\n\r\n    return (\r\n        <Card\r\n            tokens={cardTokens}\r\n        >\r\n            <Card.Item>\r\n                <Persona text={data.name} />\r\n            </Card.Item>\r\n            <Card.Section>\r\n                <Text variant=\"small\" styles={siteTextStyles}>\r\n                    {data.cfu} CFU\r\n          </Text>\r\n                <Text styles={descriptionTextStyles}>\r\n                {\r\n                    ( () => {\r\n                        if (data.anno === \"\") {\r\n                            return <span></span>;\r\n                        } else if (data.anno === \"Complementare\") {\r\n                            return <span>Complementare, </span>;\r\n                        } else return <span>{data.anno}° Anno, </span>;\r\n                    })()\r\n                }\r\n                {data.semestre}° Semestre\r\n          </Text>\r\n                {\r\n                    ( () => {\r\n                        if (data.gruppo !== \"\") {\r\n                            return (\r\n                            <Text variant=\"small\" styles={helpfulTextStyles}>\r\n                                <i className=\"fab fa-telegram-plane\" style={{color: '#6087eb'}}></i>\r\n                                &nbsp;\r\n                                <Link href={data.gruppo}>\r\n                                    Gruppo Telegram\r\n                                </Link>\r\n                            </Text>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <Text variant=\"small\" styles={helpfulTextStyles}>Gruppo non disponibile.</Text>\r\n                            )\r\n                        }\r\n                    })()\r\n                }\r\n                {\r\n                    data.websites.length !== 0 ?\r\n                        <Text variant=\"small\" styles={helpfulTextStyles}>\r\n                            <i className=\"fas fa-link\" style={{color:'#696a6b'}}></i>\r\n                            &nbsp;\r\n                            {data.websites.map(\r\n                                (e, i) => {\r\n                                    return (\r\n                                        <span key={i}>\r\n                                            <Link href={e.link}>\r\n                                                {e.etichetta}\r\n                                            </Link>\r\n                                            {i + 1 < data.websites.length ? <span>,&nbsp;</span> : <span></span>}\r\n                                        </span>\r\n                                    )\r\n                                }\r\n                            )}\r\n                        </Text>\r\n                        : <span className=\"mt-0\"></span>\r\n                }\r\n                {\r\n                    data.faq !== \"\" ?\r\n                        <Text variant=\"small\" styles={helpfulTextStyles}>\r\n                            <i className=\"far fa-question-circle\"></i>\r\n                    &nbsp;\r\n                    <Link href={data.faq}>\r\n                            Faq\r\n                    </Link>\r\n                        </Text>\r\n                        :\r\n                        <span className=\"mt-0\"></span>\r\n                }\r\n\r\n            </Card.Section>\r\n            {/*\r\n            <Card.Section\r\n                horizontal\r\n                styles={footerCardSectionStyles}\r\n                tokens={footerCardSectionTokens}\r\n            >\r\n                <Icon iconName=\"RedEye\" styles={iconStyles} />\r\n                <Icon iconName=\"SingleBookmark\" styles={iconStyles} />\r\n                <Stack.Item grow={1}>\r\n                    <span />\r\n                </Stack.Item>\r\n                <Icon iconName=\"MoreVertical\" styles={iconStyles} />\r\n            </Card.Section>*/}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default CourseItemView;",["72","73"],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\CourseListView.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Courses.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\index.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\HeaderMenu.tsx",["74"],"import * as React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { Pivot, PivotItem } from 'office-ui-fabric-react/lib/Pivot';\r\nimport { FontSizes } from '@fluentui/theme';\r\nimport { Dropdown, IDropdownOption, IDropdownStyles } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\r\n\r\nconst dropdownStyles: Partial<IDropdownStyles> = {\r\n    //dropdownOptionText: { textAlign: 'center' },\r\n    dropdown: { width: '100%', border: 'none', borderStyle: 'none', height: '44px', backgroundColor: '#faf9f8', alignItems: 'center', fontSize: FontSizes.size16 },\r\n    dropdownItems: { textAlign: 'center', alignItems: 'center' }\r\n};\r\n\r\nexport enum ItemsKeys {\r\n    home = \"home\",\r\n    courses = \"courses\",\r\n    faqProposer = \"faqProposer\",\r\n    additionalGroups = \"additionalGroups\",\r\n    administrators = \"administrators\"\r\n}\r\n\r\nconst texts: Map<ItemsKeys, string> = new Map<ItemsKeys, string>([\r\n    [ItemsKeys.home, \"Home\"],\r\n    [ItemsKeys.courses, \"Corsi\"],\r\n    [ItemsKeys.administrators, \"Amministratori\"],\r\n    [ItemsKeys.additionalGroups, \"Gruppi extra\"],\r\n    [ItemsKeys.faqProposer, \"Proponi faq\"]\r\n])\r\n\r\ninterface Props {\r\n    contentChanged: (k: ItemsKeys) => void;\r\n}\r\n\r\nconst HeaderMenu = (props: Props) => {\r\n    const history = useHistory()\r\n\r\n    var states = history.location.pathname.substring(1).split('/').filter(x => x !== '')\r\n    console.log(states)\r\n\r\n    var initialState = (states.length > 1 ? states[1] : ItemsKeys.home) as ItemsKeys\r\n    console.log(initialState)\r\n\r\n    const [selectedKey, setSelectedKey] = React.useState(initialState);\r\n    history.push(`/network/${initialState}/`);\r\n\r\n\r\n    const handlePivotLinkClick = (item?: PivotItem, e?: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n        setSelectedKey(item!.props.itemKey! as ItemsKeys);\r\n        props.contentChanged(item!.props.itemKey! as ItemsKeys);\r\n        history.push(`/network/${item!.props.itemKey!}/`);\r\n    };\r\n\r\n    const onDropdownValueChange = (event: React.FormEvent<HTMLDivElement>, item?: IDropdownOption): void => {\r\n        setSelectedKey(item!.key! as ItemsKeys);\r\n        props.contentChanged(item!.key! as ItemsKeys);\r\n        history.push(`/network/${item!.key!}/`);\r\n    };\r\n\r\n    const dropdownOptions: IDropdownOption[] = Object.values(ItemsKeys).map(x => ({ key: x, text: texts.get(x)! }))\r\n\r\n    return (\r\n        <div style={{  boxShadow: '0px 0.5px 0.5px #b3b5b4' }} className=\"header-menu\">\r\n            <div className=\"pivot\">\r\n                <Pivot\r\n                    aria-label=\"Main menu\"\r\n                    selectedKey={selectedKey}\r\n                    onLinkClick={handlePivotLinkClick}\r\n                    headersOnly={true}\r\n                    style={{ fontSize: FontSizes.size24 }}\r\n                >\r\n                    <PivotItem headerText={texts.get(ItemsKeys.home)} style={{ fontSize: FontSizes.size24 }} itemKey={ItemsKeys.home} />\r\n                    <PivotItem headerText={texts.get(ItemsKeys.courses)} style={{ fontSize: FontSizes.size24 }} itemKey={ItemsKeys.courses} />\r\n                    <PivotItem headerText={texts.get(ItemsKeys.administrators)} style={{ fontSize: FontSizes.size24 }} itemKey={ItemsKeys.administrators} />\r\n                    <PivotItem headerText={texts.get(ItemsKeys.additionalGroups)} style={{ fontSize: FontSizes.size24 }} itemKey={ItemsKeys.additionalGroups} />\r\n                    <PivotItem headerText={texts.get(ItemsKeys.faqProposer)} style={{ fontSize: FontSizes.size24 }} itemKey={ItemsKeys.faqProposer} />\r\n                </Pivot>\r\n            </div>\r\n\r\n            <div className=\"dropdown\">\r\n                <Dropdown\r\n                    selectedKey={selectedKey}\r\n                    onChange={onDropdownValueChange}\r\n                    options={dropdownOptions}\r\n                    styles={dropdownStyles}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeaderMenu;","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Content.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\HeaderTitle.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Footer.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\FaqProposer.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Administrators.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\AdditionalGroupsView.tsx",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":11,"column":23,"nodeType":"81","messageId":"82","endLine":11,"endColumn":27},{"ruleId":"79","severity":1,"message":"83","line":30,"column":11,"nodeType":"81","messageId":"82","endLine":30,"endColumn":45},{"ruleId":"79","severity":1,"message":"80","line":11,"column":23,"nodeType":"81","messageId":"82","endLine":11,"endColumn":27},{"ruleId":"75","replacedBy":"84"},{"ruleId":"77","replacedBy":"85"},{"ruleId":"79","severity":1,"message":"86","line":7,"column":27,"nodeType":"81","messageId":"82","endLine":7,"endColumn":33},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"@typescript-eslint/no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'descriptionTextStyles' is assigned a value but never used.",["87"],["88"],"'Router' is defined but never used.","no-global-assign","no-unsafe-negation"]