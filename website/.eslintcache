[{"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\reportWebVitals.ts":"1","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\ExtraGroupView.tsx":"2","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Home.tsx":"3","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\App.tsx":"4","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\CourseItemView.tsx":"5","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\CourseListView.tsx":"6","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Courses.tsx":"7","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\index.tsx":"8","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\AdditionalGroups.tsx":"9","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\HeaderMenu.tsx":"10","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Content.tsx":"11","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\HeaderTitle.tsx":"12","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Footer.tsx":"13","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\FaqProposer.tsx":"14","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Administrators.tsx":"15"},{"size":440,"mtime":1606822313938,"results":"16","hashOfConfig":"17"},{"size":2722,"mtime":1608366713417,"results":"18","hashOfConfig":"17"},{"size":4728,"mtime":1608309878314,"results":"19","hashOfConfig":"17"},{"size":1317,"mtime":1608362336396,"results":"20","hashOfConfig":"17"},{"size":4904,"mtime":1608366583805,"results":"21","hashOfConfig":"17"},{"size":2618,"mtime":1608362633675,"results":"22","hashOfConfig":"17"},{"size":4375,"mtime":1608366066606,"results":"23","hashOfConfig":"17"},{"size":640,"mtime":1606822313936,"results":"24","hashOfConfig":"17"},{"size":2948,"mtime":1606905208812,"results":"25","hashOfConfig":"17"},{"size":4003,"mtime":1608291929083,"results":"26","hashOfConfig":"17"},{"size":1296,"mtime":1607512808217,"results":"27","hashOfConfig":"17"},{"size":972,"mtime":1607458666477,"results":"28","hashOfConfig":"17"},{"size":5389,"mtime":1608362356991,"results":"29","hashOfConfig":"17"},{"size":7963,"mtime":1608292010575,"results":"30","hashOfConfig":"17"},{"size":5154,"mtime":1608362592338,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"14dtpaq",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\reportWebVitals.ts",[],["67","68"],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\ExtraGroupView.tsx",["69"],"import * as React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { Link, Text } from 'office-ui-fabric-react';\r\nimport {\r\n    Card,\r\n    ICardTokens,\r\n} from \"@uifabric/react-cards\";\r\nimport ExtraGroup from './models/ExtraGroup'\r\nimport { initializeIcons } from '@uifabric/icons';\r\nimport { FontWeights, Icon, ITextStyles, Persona } from '@fluentui/react';\r\ninitializeIcons();\r\n\r\ninterface Props {\r\n    data: ExtraGroup\r\n}\r\n\r\n\r\nconst ExtraGroupView = (props: Props) => {\r\n    var data = props.data;\r\n\r\n    /*\r\n    const siteTextStyles: ITextStyles = {\r\n        root: {\r\n            color: \"#025F52\",\r\n            fontWeight: FontWeights.semibold,\r\n        },\r\n    };\r\n    */\r\n    const descriptionTextStyles: ITextStyles = {\r\n        root: {\r\n            fontSize: \"12px\",\r\n            color: \"#333333\",\r\n            fontWeight: FontWeights.semibold\r\n        },\r\n    };\r\n    const helpfulTextStyles: ITextStyles = {\r\n        root: {\r\n            color: \"#333333\",\r\n            fontWeight: FontWeights.regular,\r\n        },\r\n    };\r\n    const cardTokens: ICardTokens = { childrenMargin: 12 };\r\n\r\n    return (\r\n        <Card\r\n            aria-label=\"Clickable vertical card with image bleeding at the center of the card\"\r\n            tokens={cardTokens}\r\n        >\r\n            <Card.Item>\r\n                <Persona text={data.name} />\r\n            </Card.Item>\r\n            <Card.Section>\r\n                <Text styles={descriptionTextStyles}>\r\n                    {data.description}\r\n                </Text>\r\n                <Text variant=\"small\" styles={helpfulTextStyles}>\r\n                    <i className=\"fab fa-telegram-plane\" style={{color: '#6087eb'}}></i>\r\n                    &nbsp;\r\n                    <Link href={data.gruppo}>\r\n                        Gruppo Telegram\r\n                    </Link>\r\n                </Text>\r\n                {/*\r\n                <Text variant=\"small\" styles={helpfulTextStyles}>\r\n                    <Icon iconName=\"Link\" />\r\n                    {data.name}\r\n                </Text>\r\n                {data.name}*/}\r\n\r\n            </Card.Section>\r\n\r\n            {/*\r\n            <Card.Section\r\n                horizontal\r\n                styles={footerCardSectionStyles}\r\n                tokens={footerCardSectionTokens}\r\n            >\r\n                <Icon iconName=\"RedEye\" styles={iconStyles} />\r\n                <Icon iconName=\"SingleBookmark\" styles={iconStyles} />\r\n                <Stack.Item grow={1}>\r\n                    <span />\r\n                </Stack.Item>\r\n                <Icon iconName=\"MoreVertical\" styles={iconStyles} />\r\n            </Card.Section>*/}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ExtraGroupView;","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Home.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\App.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\CourseItemView.tsx",["70"],"import * as React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { Link, Text } from 'office-ui-fabric-react';\r\nimport {\r\n    Card,\r\n    ICardTokens,\r\n} from \"@uifabric/react-cards\";\r\nimport Course from './models/Course'\r\nimport { initializeIcons } from '@uifabric/icons';\r\nimport { FontWeights, Icon, ITextStyles, Persona } from '@fluentui/react';\r\ninitializeIcons();\r\n\r\ninterface Props {\r\n    data: Course\r\n}\r\n\r\n\r\nconst CourseItemView = (props: Props) => {\r\n    var data = props.data;\r\n\r\n    const siteTextStyles: ITextStyles = {\r\n        root: {\r\n            color: \"#025F52\",\r\n            fontWeight: FontWeights.semibold,\r\n        },\r\n    };\r\n    const descriptionTextStyles: ITextStyles = {\r\n        root: {\r\n            color: \"#333333\",\r\n            fontWeight: FontWeights.semibold,\r\n        },\r\n    };\r\n    const helpfulTextStyles: ITextStyles = {\r\n        root: {\r\n            color: \"#333333\",\r\n            fontWeight: FontWeights.regular,\r\n        },\r\n    };\r\n    const cardTokens: ICardTokens = { childrenMargin: 12 };\r\n\r\n    return (\r\n        <Card\r\n            tokens={cardTokens}\r\n        >\r\n            <Card.Item>\r\n                <Persona text={data.name} />\r\n            </Card.Item>\r\n            <Card.Section>\r\n                <Text variant=\"small\" styles={siteTextStyles}>\r\n                    {data.cfu} CFU\r\n          </Text>\r\n                <Text styles={descriptionTextStyles}>\r\n                {\r\n                    ( () => {\r\n                        if (data.anno === \"\") {\r\n                            return <span></span>;\r\n                        } else if (data.anno === \"Complementare\") {\r\n                            return <span>Complementare, </span>;\r\n                        } else return <span>{data.anno}° Anno, </span>;\r\n                    })()\r\n                }\r\n                {data.semestre}° Semestre\r\n          </Text>\r\n                {\r\n                    ( () => {\r\n                        if (data.gruppo !== \"\") {\r\n                            return (\r\n                            <Text variant=\"small\" styles={helpfulTextStyles}>\r\n                                <i className=\"fab fa-telegram-plane\" style={{color: '#6087eb'}}></i>\r\n                                &nbsp;\r\n                                <Link href={data.gruppo}>\r\n                                    Gruppo Telegram\r\n                                </Link>\r\n                            </Text>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <Text variant=\"small\" styles={helpfulTextStyles}>Gruppo non disponibile.</Text>\r\n                            )\r\n                        }\r\n                    })()\r\n                }\r\n                {\r\n                    data.websites.length !== 0 ?\r\n                        <Text variant=\"small\" styles={helpfulTextStyles}>\r\n                            <i className=\"fas fa-link\" style={{color:'#696a6b'}}></i>\r\n                            &nbsp;\r\n                            {data.websites.map(\r\n                                (e, i) => {\r\n                                    return (\r\n                                        <span key={i}>\r\n                                            <Link href={e.link}>\r\n                                                {e.etichetta}\r\n                                            </Link>\r\n                                            {i + 1 < data.websites.length ? <span>,&nbsp;</span> : <span></span>}\r\n                                        </span>\r\n                                    )\r\n                                }\r\n                            )}\r\n                        </Text>\r\n                        : <span className=\"mt-0\"></span>\r\n                }\r\n                {\r\n                    data.faq !== \"\" ?\r\n                        <Text variant=\"small\" styles={helpfulTextStyles}>\r\n                            <i className=\"far fa-question-circle\"></i>\r\n                    &nbsp;\r\n                    <Link href={data.faq}>\r\n                            Faq\r\n                    </Link>\r\n                        </Text>\r\n                        :\r\n                        <span className=\"mt-0\"></span>\r\n                }\r\n\r\n            </Card.Section>\r\n            {/*\r\n            <Card.Section\r\n                horizontal\r\n                styles={footerCardSectionStyles}\r\n                tokens={footerCardSectionTokens}\r\n            >\r\n                <Icon iconName=\"RedEye\" styles={iconStyles} />\r\n                <Icon iconName=\"SingleBookmark\" styles={iconStyles} />\r\n                <Stack.Item grow={1}>\r\n                    <span />\r\n                </Stack.Item>\r\n                <Icon iconName=\"MoreVertical\" styles={iconStyles} />\r\n            </Card.Section>*/}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default CourseItemView;","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\CourseListView.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Courses.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\index.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\AdditionalGroups.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\HeaderMenu.tsx",["71"],"import * as React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { Pivot, PivotItem } from 'office-ui-fabric-react/lib/Pivot';\r\nimport { FontSizes } from '@fluentui/theme';\r\nimport { Dropdown, IDropdownOption, IDropdownStyles } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\r\n\r\nconst dropdownStyles: Partial<IDropdownStyles> = {\r\n    //dropdownOptionText: { textAlign: 'center' },\r\n    dropdown: { width: '100%', border: 'none', borderStyle: 'none', height: '44px', backgroundColor: '#faf9f8', alignItems: 'center', fontSize: FontSizes.size16 },\r\n    dropdownItems: { textAlign: 'center', alignItems: 'center' }\r\n};\r\n\r\nexport enum ItemsKeys {\r\n    home = \"home\",\r\n    courses = \"courses\",\r\n    faqProposer = \"faqProposer\",\r\n    additionalGroups = \"additionalGroups\",\r\n    administrators = \"administrators\"\r\n}\r\n\r\nconst texts: Map<ItemsKeys, string> = new Map<ItemsKeys, string>([\r\n    [ItemsKeys.home, \"Home\"],\r\n    [ItemsKeys.courses, \"Corsi\"],\r\n    [ItemsKeys.administrators, \"Amministratori\"],\r\n    [ItemsKeys.additionalGroups, \"Gruppi extra\"],\r\n    [ItemsKeys.faqProposer, \"Proponi faq\"]\r\n])\r\n\r\ninterface Props {\r\n    contentChanged: (k: ItemsKeys) => void;\r\n}\r\n\r\nconst HeaderMenu = (props: Props) => {\r\n    const history = useHistory()\r\n\r\n    var states = history.location.pathname.substring(1).split('/').filter(x => x !== '')\r\n    console.log(states)\r\n\r\n    var initialState = (states.length > 1 ? states[1] : ItemsKeys.home) as ItemsKeys\r\n    console.log(initialState)\r\n\r\n    const [selectedKey, setSelectedKey] = React.useState(initialState);\r\n    history.push(`/network/${initialState}/`);\r\n\r\n\r\n    const handlePivotLinkClick = (item?: PivotItem, e?: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n        setSelectedKey(item!.props.itemKey! as ItemsKeys);\r\n        props.contentChanged(item!.props.itemKey! as ItemsKeys);\r\n        history.push(`/network/${item!.props.itemKey!}/`);\r\n    };\r\n\r\n    const onDropdownValueChange = (event: React.FormEvent<HTMLDivElement>, item?: IDropdownOption): void => {\r\n        setSelectedKey(item!.key! as ItemsKeys);\r\n        props.contentChanged(item!.key! as ItemsKeys);\r\n        history.push(`/network/${item!.key!}/`);\r\n    };\r\n\r\n    const dropdownOptions: IDropdownOption[] = Object.values(ItemsKeys).map(x => ({ key: x, text: texts.get(x)! }))\r\n\r\n    return (\r\n        <div style={{  boxShadow: '0px 0.5px 0.5px #b3b5b4' }} className=\"header-menu\">\r\n            <div className=\"pivot\">\r\n                <Pivot\r\n                    aria-label=\"Main menu\"\r\n                    selectedKey={selectedKey}\r\n                    onLinkClick={handlePivotLinkClick}\r\n                    headersOnly={true}\r\n                    style={{ fontSize: FontSizes.size24 }}\r\n                >\r\n                    <PivotItem headerText={texts.get(ItemsKeys.home)} style={{ fontSize: FontSizes.size24 }} itemKey={ItemsKeys.home} />\r\n                    <PivotItem headerText={texts.get(ItemsKeys.courses)} style={{ fontSize: FontSizes.size24 }} itemKey={ItemsKeys.courses} />\r\n                    <PivotItem headerText={texts.get(ItemsKeys.administrators)} style={{ fontSize: FontSizes.size24 }} itemKey={ItemsKeys.administrators} />\r\n                    <PivotItem headerText={texts.get(ItemsKeys.additionalGroups)} style={{ fontSize: FontSizes.size24 }} itemKey={ItemsKeys.additionalGroups} />\r\n                    <PivotItem headerText={texts.get(ItemsKeys.faqProposer)} style={{ fontSize: FontSizes.size24 }} itemKey={ItemsKeys.faqProposer} />\r\n                </Pivot>\r\n            </div>\r\n\r\n            <div className=\"dropdown\">\r\n                <Dropdown\r\n                    selectedKey={selectedKey}\r\n                    onChange={onDropdownValueChange}\r\n                    options={dropdownOptions}\r\n                    styles={dropdownStyles}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeaderMenu;","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Content.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\HeaderTitle.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Footer.tsx",[],"C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\FaqProposer.tsx",["72","73","74","75"],"import * as React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { FontSizes } from '@fluentui/theme';\r\nimport { Text } from 'office-ui-fabric-react/lib/Text';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Dropdown, DropdownMenuItemType, IDropdownOption, IDropdownStyles } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { CompoundButton } from 'office-ui-fabric-react';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { TeachingBubble } from 'office-ui-fabric-react/lib/TeachingBubble';\r\nimport { DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\r\nimport { useBoolean } from '@uifabric/react-hooks';\r\n\r\n/*\r\nconst dropdownControlledExampleOptions = [\r\n    { key: 'informatica', value: \"Informatica musicale\", text: 'Informatica' },\r\n    { key: 'informatica_musicale', value: \"Informatica musicale\", text: 'Informatica musicale' },\r\n    { key: 'informatica_comdig', text: 'Informatica per la comunicazione digitale' },\r\n    { key: 'sicurezza_sistemi_reti_informatiche', value: \"SSRI\", text: 'S.S.R.I.' },\r\n    { key: 'sicurezza_sistemi_reti_informatiche_online', value: \"SSRI Online\", text: 'S.S.R.I. online' }\r\n];\r\n*/\r\n\r\n\r\nconst FaqProposer = () => {\r\n    // const [selectedItem, setSelectedItem] = React.useState<IDropdownOption>();\r\n\r\n    /*\r\n    const onChange = (event?: React.FormEvent<HTMLDivElement>, item?: IDropdownOption, index?: number): void => {\r\n        setSelectedItem(item);\r\n    };\r\n    */\r\n\r\n    const [teachingBubbleVisible, { toggle: toggleTeachingBubbleVisible }] = useBoolean(false);\r\n\r\n    return (\r\n        <div className=\"faq-proposer\">\r\n            <Container className=\"text-center\">\r\n                <Text style={{ fontSize: FontSizes.size16 }}>\r\n                    <p>\r\n                        Qui è possibile proporre nuove faq per un corso che ritieni debba essere aggiornato,\r\n                        o per cui non sono state ancora create delle faq. Si possono trovare le faq di un corso con relative risposte\r\n                        (se disponibili) nelle card dei corsi di laurea nella sezione \"Corsi e faq\".\r\n                    </p>\r\n                    <p>\r\n                        <DefaultButton\r\n                            id=\"targetButton\"\r\n                            onClick={toggleTeachingBubbleVisible}\r\n                            text={teachingBubbleVisible ? 'Nascondi' : 'Cosa sono le faq?'}\r\n                        />\r\n                        {teachingBubbleVisible && (\r\n                            <TeachingBubble\r\n                                calloutProps={{ directionalHint: DirectionalHint.bottomCenter }}\r\n                                target=\"#targetButton\"\r\n                                isWide={true}\r\n                                hasCloseButton={true}\r\n                                closeButtonAriaLabel=\"Close\"\r\n                                onDismiss={toggleTeachingBubbleVisible}\r\n                                headline=\"Le Frequently asked questions sono appunto le domande poste più frequentemente sui gruppi dei corsi.\"\r\n                            >\r\n                                Grazie a questa sezione apposita del sito web\r\n                                e all'uso di un semplice form, sarà possibile proporre nuove domande con risposta per un corso in maniera facile e immediata.\r\n                                Ad esempio, se si chiede molto spesso su un gruppo qual è la modalità d'esame di quel corso, si può proporre la domanda qui con la corrispondente risposta.\r\n                                Per vedere un esempio vai sui corsi di informatica e seleziona una faq qualsiasi tra quelle disponibili.\r\n                            </TeachingBubble>\r\n                        )}\r\n                    </p>\r\n                    {/*\r\n                    <p style={{ fontSize: FontSizes.size14 }}>\r\n                        <p style={{ fontWeight: 500 }}>Cosa sono le faq?</p>\r\n                        Le Frequently asked questions sono appunto le domande poste più frequentemente sui gruppi dei corsi: grazie a questa sezione apposita del sito web\r\n                        e all'uso di un semplice form, sarà possibile proporre nuove domande con risposta per un corso in maniera facile e immediata.\r\n                        Ad esempio, se si chiede molto spesso su un gruppo qual è la modalità d'esame di quel corso, si può proporre la domanda qui con la corrispondente risposta.\r\n                        Per vedere un esempio vai sui corsi di informatica e seleziona una faq qualsiasi tra quelle disponibili.\r\n                    </p> */}\r\n                    <p>\r\n                        <Text style={{ fontWeight: 500 }}>Compila questo piccolo form se vuoi contribuire:</Text>\r\n                    </p>\r\n                </Text>\r\n            </Container>\r\n\r\n\r\n\r\n            <Container className=\"text-center\">\r\n                <form action=\"https://docs.google.com/forms/d/e/1FAIpQLSc30-Js5kWfru_ZcXLganwhhGC5mqoRgm-pob5rUjMltedRLg/formResponse\"\r\n                    target=\"_self\"\r\n                    id=\"faq-proposer-form\"\r\n                    method=\"POST\">\r\n                    <div className=\"row mb-5\">\r\n                        <div className=\"col-4\">\r\n                            {/*\r\n                            <Dropdown\r\n                                id=\"744329775\"\r\n                                label=\"Seleziona il corso di laurea\"\r\n                                selectedKey={selectedItem?.key}\r\n                                onChange={onChange}\r\n                                placeholder=\"Corso di laurea\"\r\n                                options={dropdownControlledExampleOptions}\r\n                            />*/}\r\n                            <Label htmlFor={'744329775'} required>Scegli il corso di laurea</Label>\r\n                            <select id=\"744329775\" name=\"entry.2135536334\" required>\r\n                                <option value=\"\" disabled selected>Corso di laurea</option>\r\n                                <option value=\"Informatica\">Informatica</option>\r\n                                <option value=\"Informatica musicale\">Informatica musicale</option>\r\n                                <option value=\"Informatica per la comunicazione digitale\">Informatica per la comunicazione digitale</option>\r\n                                <option value=\"SSRI\">SSRI</option>\r\n                                <option value=\"SSRI Online\">SSRI Online</option>\r\n                            </select>\r\n                            <TextField label=\"Inserisci il nome del corso\" id=\"982590281\" name=\"entry.982590281\" placeholder=\"Nome del corso\" required />\r\n                        </div>\r\n                        <div className=\"col-8\">\r\n                            <TextField label=\"Inserisci la domanda\" id=\"482429678\" name=\"entry.482429678\" placeholder=\"Domanda\" multiline rows={3} required />\r\n                            <TextField label=\"Inserisci la risposta\" id=\"554303651\" name=\"entry.554303651\" placeholder=\"Risposta\" multiline rows={3} required />\r\n                        </div>\r\n                    </div>\r\n                    <CompoundButton primary type=\"submit\" secondaryText=\"Manda la faq proposta.\" style={{ backgroundColor: '#797673', border: '1px solid #797673' }} allowDisabledFocus >\r\n                        Invia\r\n                    </CompoundButton>\r\n                </form>\r\n            </Container>\r\n            {/*<Text style={{ fontWeight: 500 }}>Feature non disponibile in questo momento.</Text>*/}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FaqProposer;\r\n\r\n// Da sistemare, non funge\r\n/*\r\n$('#faq-proposer-form').submit(function (event) {\r\n    event.preventDefault();\r\n    alert('Faq mandata con successo, grazie per la collaborazione.');\r\n    return false;\r\n});\r\n*/","C:\\Users\\Giuseppe\\Documents\\GitHub\\network\\website\\src\\Administrators.tsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":11,"column":23,"nodeType":"82","messageId":"83","endLine":11,"endColumn":27},{"ruleId":"80","severity":1,"message":"81","line":11,"column":23,"nodeType":"82","messageId":"83","endLine":11,"endColumn":27},{"ruleId":"80","severity":1,"message":"84","line":7,"column":27,"nodeType":"82","messageId":"83","endLine":7,"endColumn":33},{"ruleId":"80","severity":1,"message":"85","line":8,"column":10,"nodeType":"82","messageId":"83","endLine":8,"endColumn":18},{"ruleId":"80","severity":1,"message":"86","line":8,"column":20,"nodeType":"82","messageId":"83","endLine":8,"endColumn":40},{"ruleId":"80","severity":1,"message":"87","line":8,"column":42,"nodeType":"82","messageId":"83","endLine":8,"endColumn":57},{"ruleId":"80","severity":1,"message":"88","line":8,"column":59,"nodeType":"82","messageId":"83","endLine":8,"endColumn":74},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"@typescript-eslint/no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Dropdown' is defined but never used.","'DropdownMenuItemType' is defined but never used.","'IDropdownOption' is defined but never used.","'IDropdownStyles' is defined but never used.","no-global-assign","no-unsafe-negation"]